
@model List<Entities.StatisticRepo.Reports>
@{
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Date.ToString("MMMM", System.Globalization.CultureInfo.CreateSpecificCulture("fr"))+" ").ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Debit).ToList()); // for incomes
    var YValuesCrd = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Creditor).ToList()); // For expenses
    ///For gender Chart
    ///
    var XValuesMaleGender =  Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.ChartDataGenderMaleValues);
    var XLabelsChartGender = Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.ChartDataGenderMaleLabels);
    ViewData["Title"] = "Bar Chart";

}


    <section class="content">
        <div class="container">
            <div class="row">
                <div class="col-md-6">

                    <!-- BAR CHART -->
                    <div class="card card-dark">
                        <div class="card-header">
                            <h3 class="card-title">Statistique Mensuels</h3>

                            <div class="card-tools">
                                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-tool" data-card-widget="remove"><i class="fas fa-times"></i></button>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="chart">
                                <canvas id="barChart" style="min-height: 250px; height: 250px; max-height: 400px; max-width: 100%;"></canvas>
                            </div>
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->


                </div>
                <!-- /.col (RIGHT) -->
                <!-- LINE CHART -->
                <div class="col-md-6">
                    <div class="card card-dark">
                        <div class="card-header">
                            <h3 class="card-title">Revenus par genre</h3>

                            <div class="card-tools">
                                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-tool" data-card-widget="remove"><i class="fas fa-times"></i></button>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="chart">
                                <canvas id="lineChart" style="min-height: 250px; height: 250px; max-height: 400px; max-width: 100%;"></canvas>
                            </div>
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>

            </div>
                <!-- /.row -->
          </div><!-- /.container-fluid -->
    </section>





                    @section Scripts{

                        <script>
        $(function () {
            /* ChartJS
             * -------
             * Here we will create a few charts using ChartJS
             */

            //--------------
            //- AREA CHART -
            //--------------

            // Get context with jQuery - using jQuery's .get() method.
            
            var areaChartData = {
                labels:@Html.Raw(XLabels),
                datasets: [
                    {
                        label: 'Revenus',
                        backgroundColor: 'rgba(60,141,188,0.9)',
                        borderColor: 'rgba(60,141,188,0.8)',
                        pointRadius: false,
                        pointColor: '#3b8bba',
                        pointStrokeColor: 'rgba(60,141,188,1)',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(60,141,188,1)',
                        data:@Html.Raw(YValues),
                    },
                    {
                        label: 'Dépenses',
                        backgroundColor: 'rgba(210, 214, 222, 1)',
                        borderColor: 'rgba(210, 214, 222, 1)',
                        pointRadius: false,
                        pointColor: 'rgba(210, 214, 222, 1)',
                        pointStrokeColor: '#c1c7d1',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(220,220,220,1)',
                        data: @Html.Raw(YValuesCrd),
                    },
                ]
            }
          
               //-------------
            //- BAR CHART -
            //-------------
            var barChartCanvas = $('#barChart').get(0).getContext('2d')
            var barChartData = jQuery.extend(true, {}, areaChartData)
            var temp0 = areaChartData.datasets[0]
            var temp1 = areaChartData.datasets[1]
            barChartData.datasets[0] = temp1
            barChartData.datasets[1] = temp0

            var barChartOptions = {
                responsive: true,
                maintainAspectRatio: false,
                datasetFill: false
            }

            var barChart = new Chart(barChartCanvas, {
                type: 'bar',
                data: barChartData,
                options: barChartOptions
            })

              //-------------
    //- LINE CHART -
    //--------------
                          var GenderlineChartData = {
                labels:@Html.Raw(XLabels),
                datasets: [
                    {
                        label: 'Revenus',
                        backgroundColor: 'rgba(60,141,188,0.9)',
                        borderColor: 'rgba(60,141,188,0.8)',
                        pointRadius: false,
                        pointColor: '#3b8bba',
                        pointStrokeColor: 'rgba(60,141,188,1)',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(60,141,188,1)',
                        data:@Html.Raw(YValues),
                    },
                    {
                        label: 'Dépenses',
                        backgroundColor: 'rgba(210, 214, 222, 1)',
                        borderColor: 'rgba(210, 214, 222, 1)',
                        pointRadius: false,
                        pointColor: 'rgba(210, 214, 222, 1)',
                        pointStrokeColor: '#c1c7d1',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(220,220,220,1)',
                        data: @Html.Raw(YValuesCrd),
                    },
                ]
            }
             var areaChartOptions = {
      maintainAspectRatio : false,
      responsive : true,
      legend: {
        display: false
      },
      scales: {
        xAxes: [{
          gridLines : {
            display : false,
          }
        }],
        yAxes: [{
          gridLines : {
            display : false,
          }
        }]
      }
    }

   var donutChartCanvas = $('#lineChart').get(0).getContext('2d')
           var donutData = {
      labels: @Html.Raw(XLabelsChartGender),
      datasets: [
        {
          data: @Html.Raw(XValuesMaleGender),
          backgroundColor : [ '#f39c12', '#00c0ef'],
        }
      ]
    }
             var donutOptions     = {
      maintainAspectRatio : false,
      responsive : true,
    }

   //Create pie or douhnut chart
    // You can switch between pie and douhnut using the method below.
    var donutChart = new Chart(donutChartCanvas, {
      type: 'doughnut',
      data: donutData,
      options: donutOptions      
    })
          
        })
          </script>

      }

